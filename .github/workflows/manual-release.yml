name: Manual Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "tag name"
        required: true

permissions:
  contents: write
 
jobs:
  build:
    name: Release libs
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-14]

    steps:
    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --manifest-path src-rust/Cargo.toml

    - name: Correct MacOS lib name
      if: runner.os == 'MacOS'
      run: |
        mv src-rust/target/release/libeye.dylib libeye_$(uname -m).dylib

    - name: Upload MacOS x86_64 lib
      if: runner.os == 'MacOS'
      uses: svenstaro/upload-release-action@v2
      with:
        file: libeye_x86_64.dylib
        tag: ${{ github.event.inputs.tag }}
        overwrite: true

    - name: Upload MacOS arm lib
      if: runner.os == 'MacOS'
      uses: svenstaro/upload-release-action@v2
      with:
        file: libeye_aarch64.dylib
        tag: ${{ github.event.inputs.tag }}
        overwrite: true

    - name: Upload Linux lib
      if: runner.os == 'Linux'
      uses: svenstaro/upload-release-action@v2
      with:
        file: src-rust/target/release/libeye.so
        tag: ${{ github.event.inputs.tag }}
        overwrite: true

    - name: Upload Windows lib
      if: runner.os == 'Windows'
      uses: svenstaro/upload-release-action@v2
      with:
        file: src-rust/target/release/eye.dll
        tag: ${{ github.event.inputs.tag }}
        overwrite: true
